[! Copyright (C) 2007 Slava Pestov.
! See http://factorcode.org/license.txt for BSD license.
USING: bootstrap.image.private kernel namespaces system
cpu.x86.assembler layouts vocabs math ;
IN: bootstrap.x86

big-endian off

1 jit-code-format set

: stack-frame-size 4 bootstrap-cells ;

[
    arg0 0 MOV
    stack-frame-size PUSH                      ! save stack frame size
    arg0 PUSH                                  ! save XT
    0 PUSH                                     ! reserved
] { } make jit-prolog set

[
    arg0 0 [] MOV                              ! load literal
    ds-reg bootstrap-cell ADD                  ! increment datastack pointer
    ds-reg [] arg0 MOV                         ! store literal on datastack
] { } make jit-push-literal set

[
    arg1 stack-reg MOV                         ! pass callstack pointer as arg 2
] { } make jit-word-primitive-jump set

[
    arg1 stack-reg bootstrap-cell neg [+] LEA  ! pass callstack pointer as arg 2
] { } make jit-word-primitive-call set

[
    0 JMP
] { } make jit-word-jump set

[
    0 CALL
] { } make jit-word-call set

[
    arg1 0 MOV                                 ! load addr of true quotation
    arg0 ds-reg [] MOV                         ! load boolean
    ds-reg bootstrap-cell SUB                  ! pop boolean
    arg0 \ f tag-number CMP                    ! compare it with f
    arg0 arg1 [] CMOVE                         ! load false branch if equal
    arg0 arg1 bootstrap-cell [+] CMOVNE        ! load true branch if not equal
    arg0 quot-xt@ [+] JMP                      ! execute branch
] { } make jit-if set

[
    arg1 0 [] MOV                              ! load dispatch table
    arg0 ds-reg [] MOV                         ! load index
    fixnum>slot@                               ! turn it into an array offset
    ds-reg bootstrap-cell SUB                  ! pop index
    arg0 arg1 ADD                              ! compute quotation location
    arg0 arg0 array-start [+] MOV              ! load quotation
    arg0 quot-xt@ [+] JMP                      ! execute branch
] { } make jit-dispatch set

[
    stack-reg stack-frame-size bootstrap-cell - ADD ! unwind stack frame
] { } make jit-epilog set

[ 0 RET ] { } make jit-return set

"bootstrap.x86" forget-vocab
